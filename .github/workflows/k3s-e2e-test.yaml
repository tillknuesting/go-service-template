name: K3s and Nginx

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install k3s
        run: |
          echo "Starting K3s cluster"
          curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION="v1.25.11+k3s1" K3S_KUBECONFIG_MODE=777 INSTALL_K3S_EXEC="server --disable traefik" sh -
          mkdir -p ~/.kube
          cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Wait for k3s service to be running
        run: |
          retries=0
          until sudo systemctl is-active --quiet k3s; do
            if [ $retries -eq 30 ]; then
              echo "k3s service is not running after multiple retries."
              exit 1
            fi
            retries=$((retries+1))
            sleep 5
          done
          echo "k3s service is running."

      - name: Wait for k3s node to be ready
        run: |
          retries=0
          until kubectl get nodes -o jsonpath='{.items[0].status.conditions[?(@.type=="Ready")].status}' | grep True; do
            if [ $retries -eq 30 ]; then
              echo "k3s node is not ready after multiple retries."
              exit 1
            fi
            retries=$((retries+1))
            sleep 5
          done
          echo "k3s node is ready."

      - name: Deploy Nginx
        run: |
          kubectl create deployment nginx --image=nginx

      - name: Expose Nginx service
        run: |
          kubectl expose deployment nginx --port=80 --type=LoadBalancer

      - name: Wait for Nginx to be ready
        run: |
          until kubectl get deployment nginx -o jsonpath='{.status.readyReplicas}' | grep 1; do sleep 5; done

      - name: Test Nginx reachability
        run: |
          retries=0
          until curl -s -o /dev/null http://localhost; do
            if [ $retries -eq 30 ]; then
              echo "Nginx server is not reachable after multiple retries."
              exit 1
            fi
            retries=$((retries+1))
            sleep 5
          done
          echo "Nginx server is reachable."

      - name: Test Nginx response
        run: |
          response=$(curl -s http://localhost)
          if [[ $response == *"Welcome to nginx!"* ]]; then
            echo "Nginx server response is correct."
          else
            echo "Nginx server response is incorrect."
            exit 1
          fi
